This is an experiment in making a game engine. It's intended for real use but hacked in odd moments and occasionally odd purposes, so don't expect master to always be in a well engineered state.

SxE is intended to be simple, modular, and able to deal with platforms. PC and Android are officially supported. Game consoles beyond that, not at the moment.

To build the system, generally, you want something like this:

	linux$ . envsetup.sh
	linux$ m build
	
	windows> envsetup.cmd
	windows> m build

For help on available commands use the _hmm_ command. You can also use gradle directly through the included gradle wrapper (./gradlew; .\gradlew.bat).

Exact procedures for building an SDK or a project are not well defined yet. The installApp, distZip, and distTarget targets should generally work where applicable, e.g. for demo applications but not necessarily as a top level target.

Code is structured into subproject modules for the core system, platform dependencies, and other modules such as scripting, tools, and demo applications. At the minimum you require the modules for :core and your platform (e.g. :pc).

Most external dependencies are supplied through a repository. Those that cannot be, will usually be found somewhere in vendor/. Otherwise through an external SDK, such as the Android SDK. Assume that you will require network connectivity the first time that you build SxE.
