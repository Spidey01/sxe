This is an experiment in making a game engine. It's intended for real use but hacked in odd moments and occasionally odd purposes, so don't expect master to always be in a well engineered state.

SxE is intended to be simple, modular, and able to deal with platforms. ~~PC and Android are officially supported. Game consoles beyond that, not at the moment.~~

SxE is built using [ninja](https://ninja-build.org/) files generated by [ngen](https://github.com/Spidey01/ngen). You will also need cmake and the native toolchain. MS Visual Studio is used for Windows NT, and GCC is used for GNU/Linux.

To build the system, generally, you want something like this:

	linux$ . ./envsetup/envsetup.sh
	linux$ ngen
	linux$ m
	
	windows> call .\envsetup\envsetup.cmd
	windows> ngen
	windows> m

For help on available commands use the _hmm_ command. You can also use gradle directly through the included gradle wrapper (./gradlew; .\gradlew.bat).

When built everything should be placed in dist, and ready to be build against in an SDK like fashion. The included tests and demos are built against and run from the dist tree.

Most external dependencies are supplied through a repository. Those that cannot be, will usually be found somewhere in vendor/. Otherwise through an external SDK, such as the Windows and Android SDKs. Assume that you will require network connectivity the first time that you build SxE.

