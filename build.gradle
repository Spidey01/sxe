
allprojects {

    /** So all projects  have this in one place.
     */
    repositories {
        mavenLocal()
        mavenCentral()
    }

}

//
// Like project(':demos:*:pc'), except that doesn't work so I wrote this.
//
def project_glob = { glob ->
    def sanitize = { s -> s.replace('\\', '/').replace('.', '').replace('/', ':') }
    def nodes = []
    def p = ''
    def position = []

    for (segment in glob.substring(1).tokenize(':')) {
        if (segment == '*') {
            (new File(p).list()).each { d ->
                def s = ':' + position.join(':')
                assert glob.startsWith(s)

                // FIXME: index out of range if /:*$'
                def remainder = glob[s.length()+1+segment.length() .. glob.length()-1]
                def fusion = (p+':'+d+remainder).replace('\\', '/').replace('.', '').replace('/', ':')
                nodes << sanitize(p+':'+d)
            }
        } else if (segment == '**') {
            throw new RuntimeException(":foo:**:bar syntax not implemented!")
        } else {
            if (nodes.isEmpty()) {
                p = (p.isEmpty() ? './' : p+'/')+segment
                // p = p+'/'+segment
            } else {
                def temp = []
                nodes.each { temp << sanitize(it+':'+segment) }
                nodes = temp
            }
        }

        position << segment
    }

    return nodes
}


tasks.add(name: "core-demos", description: "build :demos:*:lib" ) {
    project_glob(':demos:*:lib').each { demo ->
        dependsOn demo+':build'
    }
}


// makes pc-demos, android-demos, ...
[ 'pc', 'android' ].each { 
    tasks.add(name: "${it}-demos", description: "build :demos:*:${it}" ) {
        project_glob(':demos:*:${it}').each { demo ->
            dependsOn demo+':build'
        }
    }
}


task tags(type: Exec) {
    executable 'ctags'
    args '-R'
}

